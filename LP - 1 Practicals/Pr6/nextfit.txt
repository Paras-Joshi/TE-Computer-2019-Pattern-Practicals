//The NextFit algorithm is a memory allocation strategy that finds the next available block that can fit a process, starting from where the previous allocation left off. 
//This avoids always starting from the beginning of the block list, which helps improve allocation performance by reducing repeated scanning of blocks.
package package3;

import java.util.Scanner;

public class Pr6_3 {
	static void NextFit(int [] blockSize, int m, int processSize[], int n, int[] remblockSize) {
		int allocation[] = new int[n];
		int j = 0;
		for(int i = 0;i < allocation.length;i++) {
			allocation[i] = -1;
		}
		for(int i = 0;i < n;i++) {
			int count = 0;
			while(count < m) {
				if(blockSize[j] >= processSize[i]) {
					allocation[i] = j;
					blockSize[j] -= processSize[i];
					remblockSize[i] = blockSize[j];
					break;
				}
				// It will run when count > m 
				j = (j + 1) %m;//The index j is updated using j = (j + 1) % m to move to the next block, wrapping around to the start if it reaches the end of the array.
				count++;
				//This wrapping around ensures that the algorithm can continue checking blocks from the beginning if it reaches the end of the block array, enabling the circular nature of NextFit.
			}
		}
		System.out.println("\nProcess No.\tProcess Size\tBlock no.\tRemaninig Block Size");
		for(int i = 0;i < n;i++) {
			System.out.print(" " + (i+1) + "\t\t" +processSize[i] + "\t\t");
			if(allocation[i] != -1) {
				System.out.print(allocation[i]+1+"\t\t" + remblockSize[i]);
			}else {
				System.out.print("Not Allocated"+"\t"+remblockSize[i]);
			}
			System.out.println();
				
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int m,n,num; 
		 Scanner in=new Scanner(System.in); 
		 System.out.print("Enter how many number of blocks you want to enter:"); 
		 m=in.nextInt(); 
		 int blockSize[]=new int[m]; 
		 int remblockSize[]=new int[m]; 
		 for(int i=0;i<m;i++) { 
		 System.out.print("Enter Data "+(i+1)+":"); 
		 num=in.nextInt(); 
		 blockSize[i]=num; 
		 } 
		 System.out.print("Enter how many number of process you want to enter:"); 
		 n=in.nextInt(); 
		 int processSize[]=new int[n];
		 
		 for(int i=0;i<n;i++) { 
		 System.out.print("Enter Data "+(i+1)+":"); 
		 num=in.nextInt(); 
		 processSize[i]=num; 
		 } 
		 NextFit(blockSize, m, processSize, n,remblockSize);
		 in.close();
	}

}
